run:
  # timeout for analysis, e.g. 30s, 5m, default is 1m
  timeout: 1m

  # exit code when at least one issue was found, default is 1
  issues-exit-code: 1

  # include test files or not, default is true
  tests: true

# output configuration options
output:
  # colored-line-number|line-number|json|tab|checkstyle|code-climate, default is "colored-line-number"
  format: line-number

  # print lines of code with issue, default is true
  print-issued-lines: false

linters:
  # Start with all linters disabled and white list wanted linters
  disable-all: true

  # Enabled linters
  enable:
    - bodyclose
    - depguard
    - dogsled
    - dupl
    - errcheck
    - errorlint
    - exportloopref
    - gochecknoinits
    - gocognit
    - gocritic
    - gocyclo
    - gofumpt
    - goimports
    - goprintffuncname
    - gosec
    - gosimple
    - govet
    - govet
    - ineffassign
    - megacheck
    - misspell
    - nakedret
    - prealloc
    - rowserrcheck
    - staticcheck
    - stylecheck
    - typecheck
    - unconvert
    - unparam
    - unused
    - whitespace

  # Run only linter supporting fast option
  fast: false

issues:
  # Independently from option `exclude` we use default exclude patterns,
  # it can be disabled by this option. To list all
  # excluded by default patterns execute `golangci-lint run --help`.
  # Default value for this option is true.

  # Excluding configuration per-path, per-linter, per-text and per-source
  exclude:
    - "ST1000: at least one file in a package should have a package comment"

  exclude-use-default: false

  # Maximum issues count per one linter. Set to 0 to disable. Default is 50.
  max-issues-per-linter: 0

  # Maximum count of issues with the same text. Set to 0 to disable. Default is 3.
  max-same-issues: 0
